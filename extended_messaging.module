<?php

define("EXTENDED_MESSAGING_XMPP_DOMAIN", variable_get('extended_messaging_domain', 'localhost'));
define("EXTENDED_MESSAGING_XMPP_SERVER", variable_get('extended_messaging_server', 'http://xmpp.asaoweb.com:5280/http-bind/'));
define("EXTENDED_MESSAGING_XMPP_PORT", variable_get('extended_messaging_port', '5222'));
define("EXTENDED_MESSAGING_XMPP_WS_URL", variable_get('extended_messaging_ws_url', 'ws://xmpp.asaoweb.com:5280/xmpp-websocket/'));
define("EXTENDED_MESSAGING_XMPP_PRICACY_MODE", variable_get('extended_messaging_privacy_mode', 'blacklist'));

function extended_messaging_menu() {
   $items = array();
     
   $items['messaging/rpc/%'] = array(
         'page callback' => 'extended_messaging_rpc',
         'page arguments' => array(2),
         'access arguments' => array('access content'),
         'file' => 'includes/extended_messaging.rpc.inc',
         'type' => MENU_CALLBACK,
   );
   
   //// ADMIN
   $items['admin/settings/extended_messaging'] = array(
         'title' => 'Extended Messaging',
         'description' => 'Global settings for extended messaging.',
         'page callback' => 'drupal_get_form',
         'page arguments' => array('extended_messaging_admin'),
         'access arguments' => array('admin'),
         'file' => 'includes/extended_messaging.admin.inc',
         'type' => MENU_NORMAL_ITEM
   );
     
   return $items;
}

function extended_messaging_include_settings($with=0) {
   static $current;
    
   // be sure we only add the setting only once
   if ( empty($current) ) {
      global $user;
      
      module_load_include('class.inc', 'extended_messaging', 'includes/classes/ExtendedMessagingUser');
      
      $xmpp = ExtendedMessagingUser::instance();
      
      $settings = array(
         'xmpp' => array(
               'server'   => EXTENDED_MESSAGING_XMPP_SERVER, 
               'ws'       => EXTENDED_MESSAGING_XMPP_WS_URL, 
               'port'     => EXTENDED_MESSAGING_XMPP_PORT, 
               'domain'   => EXTENDED_MESSAGING_XMPP_DOMAIN,
               'jid'      => $xmpp->BareJID(),
               'auth'     => $xmpp->Auth(),
               'nickname' => $xmpp->Nick(),
               'groups'   => array("groups" => array( 
                                array("xmppname"=>"Friends", "displayname"=>"Mes amis" ), 
                                )), //{ "groups" : [ { "xmppname":"Friends", "displayname":"Mes amis"}, { "xmppname":"Sales", "displayname":"Ventes"} ] }
         ),
         'roles' => user_roles(true),
         'rpcbase' => url('messaging/rpc/'),
         'debug' => variable_get('extended_messaging_debug', 0)
      );
      
      drupal_alter('em_roster_groups', $settings['xmpp']['groups']);
      $htmlcolumnurl = "";
      drupal_alter('em_html_url', $htmlcolumnurl);
      if (!empty($htmlcolumnurl)) {
        $settings['htmlcol'] = $htmlcolumnurl;
      }
      if ( is_object($with) && $with->uid > 0) {
        $settings['initwith'] = $with->uid;
      }
      drupal_alter('em_settings', $settings);

      $old_setting = drupal_add_js(array('extended_messaging' => $settings), 'setting');
      $current[] = $settings;
   }
}

function extended_messaging_user_online($account) {
   global $language;
   //static $online_users;
   $online_users = &drupal_static(__FUNCTION__);
   if ($account->uid <= 0) {
      return false;
   }

   if ( !isset($online_users) || !isset($online_user[$account->uid]) || $online_user[$account->uid]['exp'] > time() ) {
      
      if ( ($cache = cache_get('extended_messaging_online')) && !is_array( $online_users = $cache->data ) ) {
         $online_users = array();
      }

      if (!isset($online_user[$account->uid]) || $online_user[$account->uid]['exp'] > time() ) {

         $url = "http://".EXTENDED_MESSAGING_XMPP_DOMAIN.":5280/status/".$account->uid."@".EXTENDED_MESSAGING_XMPP_DOMAIN."/text";
         $online = drupal_http_request($url, array('timeout'=>2));
         if ($online->code == "200") {
            /*$tmp = (array) json_decode($online->data);
            // strange json_decode for {"3"=>"online"} value for example
            foreach($tmp as $uid=>$status) {
              $online_users[$uid] = "$status";
            }*/
            $online_users[$account->uid] = array('exp'=>time()+60, 's'=>$online->data);
         } else {
            watchdog('extended_messaging', "Impossible to update online user @ ".$url);
         }

         cache_set('extended_messaging_online', $online_users, time() + 3600) ;
      }
      //dpm($online_users);
   }
   //$online_users = array("3"=>'online', "4"=>'online');
   return $online_users[$account->uid]['s'];
}